{"version":3,"file":"npm.ctrl.30f2cd7cf0de15c82d69.chunk.js","mappings":"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","sources":["webpack://react-template/./node_modules/@ctrl/tinycolor/dist/conversion.js","webpack://react-template/./node_modules/@ctrl/tinycolor/dist/css-color-names.js","webpack://react-template/./node_modules/@ctrl/tinycolor/dist/format-input.js","webpack://react-template/./node_modules/@ctrl/tinycolor/dist/from-ratio.js","webpack://react-template/./node_modules/@ctrl/tinycolor/dist/index.js","webpack://react-template/./node_modules/@ctrl/tinycolor/dist/interfaces.js","webpack://react-template/./node_modules/@ctrl/tinycolor/dist/public_api.js","webpack://react-template/./node_modules/@ctrl/tinycolor/dist/random.js","webpack://react-template/./node_modules/@ctrl/tinycolor/dist/readability.js","webpack://react-template/./node_modules/@ctrl/tinycolor/dist/to-ms-filter.js","webpack://react-template/./node_modules/@ctrl/tinycolor/dist/util.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.numberInputToObject = exports.parseIntFromHex = exports.convertHexToDecimal = exports.convertDecimalToHex = exports.rgbaToArgbHex = exports.rgbaToHex = exports.rgbToHex = exports.hsvToRgb = exports.rgbToHsv = exports.hslToRgb = exports.rgbToHsl = exports.rgbToRgb = void 0;\nvar util_1 = require(\"./util\");\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n/**\n * Handle bounds / percentage checking to conform to CSS color spec\n * <http://www.w3.org/TR/css3-color/>\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\n * *Returns:* { r, g, b } in [0, 255]\n */\nfunction rgbToRgb(r, g, b) {\n    return {\n        r: util_1.bound01(r, 255) * 255,\n        g: util_1.bound01(g, 255) * 255,\n        b: util_1.bound01(b, 255) * 255,\n    };\n}\nexports.rgbToRgb = rgbToRgb;\n/**\n * Converts an RGB color value to HSL.\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n * *Returns:* { h, s, l } in [0,1]\n */\nfunction rgbToHsl(r, g, b) {\n    r = util_1.bound01(r, 255);\n    g = util_1.bound01(g, 255);\n    b = util_1.bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (max + min) / 2;\n    if (max === min) {\n        s = 0;\n        h = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, l: l };\n}\nexports.rgbToHsl = rgbToHsl;\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * (6 * t);\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n/**\n * Converts an HSL color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nfunction hslToRgb(h, s, l) {\n    var r;\n    var g;\n    var b;\n    h = util_1.bound01(h, 360);\n    s = util_1.bound01(s, 100);\n    l = util_1.bound01(l, 100);\n    if (s === 0) {\n        // achromatic\n        g = l;\n        b = l;\n        r = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\nexports.hslToRgb = hslToRgb;\n/**\n * Converts an RGB color value to HSV\n *\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n * *Returns:* { h, s, v } in [0,1]\n */\nfunction rgbToHsv(r, g, b) {\n    r = util_1.bound01(r, 255);\n    g = util_1.bound01(g, 255);\n    b = util_1.bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var v = max;\n    var d = max - min;\n    var s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\nexports.rgbToHsv = rgbToHsv;\n/**\n * Converts an HSV color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nfunction hsvToRgb(h, s, v) {\n    h = util_1.bound01(h, 360) * 6;\n    s = util_1.bound01(s, 100);\n    v = util_1.bound01(v, 100);\n    var i = Math.floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\nexports.hsvToRgb = hsvToRgb;\n/**\n * Converts an RGB color to hex\n *\n * Assumes r, g, and b are contained in the set [0, 255]\n * Returns a 3 or 6 character hex\n */\nfunction rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n        util_1.pad2(Math.round(r).toString(16)),\n        util_1.pad2(Math.round(g).toString(16)),\n        util_1.pad2(Math.round(b).toString(16)),\n    ];\n    // Return a 3 character hex if possible\n    if (allow3Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join('');\n}\nexports.rgbToHex = rgbToHex;\n/**\n * Converts an RGBA color plus alpha transparency to hex\n *\n * Assumes r, g, b are contained in the set [0, 255] and\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\n */\n// eslint-disable-next-line max-params\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n        util_1.pad2(Math.round(r).toString(16)),\n        util_1.pad2(Math.round(g).toString(16)),\n        util_1.pad2(Math.round(b).toString(16)),\n        util_1.pad2(convertDecimalToHex(a)),\n    ];\n    // Return a 4 character hex if possible\n    if (allow4Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1)) &&\n        hex[3].startsWith(hex[3].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join('');\n}\nexports.rgbaToHex = rgbaToHex;\n/**\n * Converts an RGBA color to an ARGB Hex8 string\n * Rarely used, but required for \"toFilter()\"\n */\nfunction rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n        util_1.pad2(convertDecimalToHex(a)),\n        util_1.pad2(Math.round(r).toString(16)),\n        util_1.pad2(Math.round(g).toString(16)),\n        util_1.pad2(Math.round(b).toString(16)),\n    ];\n    return hex.join('');\n}\nexports.rgbaToArgbHex = rgbaToArgbHex;\n/** Converts a decimal to a hex value */\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\nexports.convertDecimalToHex = convertDecimalToHex;\n/** Converts a hex value to a decimal */\nfunction convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n}\nexports.convertHexToDecimal = convertHexToDecimal;\n/** Parse a base-16 hex value into a base-10 integer */\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\nexports.parseIntFromHex = parseIntFromHex;\nfunction numberInputToObject(color) {\n    return {\n        r: color >> 16,\n        g: (color & 0xff00) >> 8,\n        b: color & 0xff,\n    };\n}\nexports.numberInputToObject = numberInputToObject;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.names = void 0;\n// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json\n/**\n * @hidden\n */\nexports.names = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    goldenrod: '#daa520',\n    gold: '#ffd700',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavenderblush: '#fff0f5',\n    lavender: '#e6e6fa',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32',\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidCSSUnit = exports.stringInputToObject = exports.inputToRGB = void 0;\nvar conversion_1 = require(\"./conversion\");\nvar css_color_names_1 = require(\"./css-color-names\");\nvar util_1 = require(\"./util\");\n/**\n * Given a string or object, convert that input to RGB\n *\n * Possible string inputs:\n * ```\n * \"red\"\n * \"#f00\" or \"f00\"\n * \"#ff0000\" or \"ff0000\"\n * \"#ff000000\" or \"ff000000\"\n * \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n * \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n * \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n * \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n * \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n * \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n * \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n * ```\n */\nfunction inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color === 'string') {\n        color = stringInputToObject(color);\n    }\n    if (typeof color === 'object') {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = conversion_1.rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = util_1.convertToPercentage(color.s);\n            v = util_1.convertToPercentage(color.v);\n            rgb = conversion_1.hsvToRgb(color.h, s, v);\n            ok = true;\n            format = 'hsv';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = util_1.convertToPercentage(color.s);\n            l = util_1.convertToPercentage(color.l);\n            rgb = conversion_1.hslToRgb(color.h, s, l);\n            ok = true;\n            format = 'hsl';\n        }\n        if (Object.prototype.hasOwnProperty.call(color, 'a')) {\n            a = color.a;\n        }\n    }\n    a = util_1.boundAlpha(a);\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: Math.min(255, Math.max(rgb.r, 0)),\n        g: Math.min(255, Math.max(rgb.g, 0)),\n        b: Math.min(255, Math.max(rgb.b, 0)),\n        a: a,\n    };\n}\nexports.inputToRGB = inputToRGB;\n// <http://www.w3.org/TR/css3-values/#integers>\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// <http://www.w3.org/TR/css3-values/#number-value>\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\nvar CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n// Actual matching.\n// Parentheses and commas are optional, but not required.\n// Whitespace can take the place of commas or opening paren\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar matchers = {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\n    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\n    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\n    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\n    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\n    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n};\n/**\n * Permissive string parsing.  Take in a number of formats, and output an object\n * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n */\nfunction stringInputToObject(color) {\n    color = color.trim().toLowerCase();\n    if (color.length === 0) {\n        return false;\n    }\n    var named = false;\n    if (css_color_names_1.names[color]) {\n        color = css_color_names_1.names[color];\n        named = true;\n    }\n    else if (color === 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };\n    }\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match = matchers.rgb.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    match = matchers.rgba.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    match = matchers.hsl.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    match = matchers.hsla.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    match = matchers.hsv.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    match = matchers.hsva.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    match = matchers.hex8.exec(color);\n    if (match) {\n        return {\n            r: conversion_1.parseIntFromHex(match[1]),\n            g: conversion_1.parseIntFromHex(match[2]),\n            b: conversion_1.parseIntFromHex(match[3]),\n            a: conversion_1.convertHexToDecimal(match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex6.exec(color);\n    if (match) {\n        return {\n            r: conversion_1.parseIntFromHex(match[1]),\n            g: conversion_1.parseIntFromHex(match[2]),\n            b: conversion_1.parseIntFromHex(match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    match = matchers.hex4.exec(color);\n    if (match) {\n        return {\n            r: conversion_1.parseIntFromHex(match[1] + match[1]),\n            g: conversion_1.parseIntFromHex(match[2] + match[2]),\n            b: conversion_1.parseIntFromHex(match[3] + match[3]),\n            a: conversion_1.convertHexToDecimal(match[4] + match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex3.exec(color);\n    if (match) {\n        return {\n            r: conversion_1.parseIntFromHex(match[1] + match[1]),\n            g: conversion_1.parseIntFromHex(match[2] + match[2]),\n            b: conversion_1.parseIntFromHex(match[3] + match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    return false;\n}\nexports.stringInputToObject = stringInputToObject;\n/**\n * Check to see if it looks like a CSS unit\n * (see `matchers` above for definition).\n */\nfunction isValidCSSUnit(color) {\n    return Boolean(matchers.CSS_UNIT.exec(String(color)));\n}\nexports.isValidCSSUnit = isValidCSSUnit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.legacyRandom = exports.fromRatio = void 0;\nvar index_1 = require(\"./index\");\nvar util_1 = require(\"./util\");\n/**\n * If input is an object, force 1 into \"1.0\" to handle ratios properly\n * String input requires \"1.0\" as input, so 1 will be treated as 1\n */\nfunction fromRatio(ratio, opts) {\n    var newColor = {\n        r: util_1.convertToPercentage(ratio.r),\n        g: util_1.convertToPercentage(ratio.g),\n        b: util_1.convertToPercentage(ratio.b),\n    };\n    if (ratio.a !== undefined) {\n        newColor.a = Number(ratio.a);\n    }\n    return new index_1.TinyColor(newColor, opts);\n}\nexports.fromRatio = fromRatio;\n/** old random function */\nfunction legacyRandom() {\n    return new index_1.TinyColor({\n        r: Math.random(),\n        g: Math.random(),\n        b: Math.random(),\n    });\n}\nexports.legacyRandom = legacyRandom;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tinycolor = exports.TinyColor = void 0;\nvar conversion_1 = require(\"./conversion\");\nvar css_color_names_1 = require(\"./css-color-names\");\nvar format_input_1 = require(\"./format-input\");\nvar util_1 = require(\"./util\");\nvar TinyColor = /** @class */ (function () {\n    function TinyColor(color, opts) {\n        if (color === void 0) { color = ''; }\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        // If input is already a tinycolor, return itself\n        if (color instanceof TinyColor) {\n            // eslint-disable-next-line no-constructor-return\n            return color;\n        }\n        if (typeof color === 'number') {\n            color = conversion_1.numberInputToObject(color);\n        }\n        this.originalInput = color;\n        var rgb = format_input_1.inputToRGB(color);\n        this.originalInput = color;\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        this.a = rgb.a;\n        this.roundA = Math.round(100 * this.a) / 100;\n        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n        this.gradientType = opts.gradientType;\n        // Don't let the range of [0,255] come back in [0,1].\n        // Potentially lose a little bit of precision here, but will fix issues where\n        // .5 gets interpreted as half of the total, instead of half of 1\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n        if (this.r < 1) {\n            this.r = Math.round(this.r);\n        }\n        if (this.g < 1) {\n            this.g = Math.round(this.g);\n        }\n        if (this.b < 1) {\n            this.b = Math.round(this.b);\n        }\n        this.isValid = rgb.ok;\n    }\n    TinyColor.prototype.isDark = function () {\n        return this.getBrightness() < 128;\n    };\n    TinyColor.prototype.isLight = function () {\n        return !this.isDark();\n    };\n    /**\n     * Returns the perceived brightness of the color, from 0-255.\n     */\n    TinyColor.prototype.getBrightness = function () {\n        // http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    };\n    /**\n     * Returns the perceived luminance of a color, from 0-1.\n     */\n    TinyColor.prototype.getLuminance = function () {\n        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var R;\n        var G;\n        var B;\n        var RsRGB = rgb.r / 255;\n        var GsRGB = rgb.g / 255;\n        var BsRGB = rgb.b / 255;\n        if (RsRGB <= 0.03928) {\n            R = RsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (GsRGB <= 0.03928) {\n            G = GsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (BsRGB <= 0.03928) {\n            B = BsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n        }\n        return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    };\n    /**\n     * Returns the alpha value of a color, from 0-1.\n     */\n    TinyColor.prototype.getAlpha = function () {\n        return this.a;\n    };\n    /**\n     * Sets the alpha value on the current color.\n     *\n     * @param alpha - The new alpha value. The accepted range is 0-1.\n     */\n    TinyColor.prototype.setAlpha = function (alpha) {\n        this.a = util_1.boundAlpha(alpha);\n        this.roundA = Math.round(100 * this.a) / 100;\n        return this;\n    };\n    /**\n     * Returns the object as a HSVA object.\n     */\n    TinyColor.prototype.toHsv = function () {\n        var hsv = conversion_1.rgbToHsv(this.r, this.g, this.b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\n    };\n    /**\n     * Returns the hsva values interpolated into a string with the following format:\n     * \"hsva(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHsvString = function () {\n        var hsv = conversion_1.rgbToHsv(this.r, this.g, this.b);\n        var h = Math.round(hsv.h * 360);\n        var s = Math.round(hsv.s * 100);\n        var v = Math.round(hsv.v * 100);\n        return this.a === 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the object as a HSLA object.\n     */\n    TinyColor.prototype.toHsl = function () {\n        var hsl = conversion_1.rgbToHsl(this.r, this.g, this.b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\n    };\n    /**\n     * Returns the hsla values interpolated into a string with the following format:\n     * \"hsla(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHslString = function () {\n        var hsl = conversion_1.rgbToHsl(this.r, this.g, this.b);\n        var h = Math.round(hsl.h * 360);\n        var s = Math.round(hsl.s * 100);\n        var l = Math.round(hsl.l * 100);\n        return this.a === 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the hex value of the color.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHex = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return conversion_1.rgbToHex(this.r, this.g, this.b, allow3Char);\n    };\n    /**\n     * Returns the hex value of the color -with a # appened.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHexString = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return '#' + this.toHex(allow3Char);\n    };\n    /**\n     * Returns the hex 8 value of the color.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8 = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return conversion_1.rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n    };\n    /**\n     * Returns the hex 8 value of the color -with a # appened.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8String = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return '#' + this.toHex8(allow4Char);\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toRgb = function () {\n        return {\n            r: Math.round(this.r),\n            g: Math.round(this.g),\n            b: Math.round(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA values interpolated into a string with the following format:\n     * \"RGBA(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toRgbString = function () {\n        var r = Math.round(this.r);\n        var g = Math.round(this.g);\n        var b = Math.round(this.b);\n        return this.a === 1 ? \"rgb(\" + r + \", \" + g + \", \" + b + \")\" : \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toPercentageRgb = function () {\n        var fmt = function (x) { return Math.round(util_1.bound01(x, 255) * 100) + \"%\"; };\n        return {\n            r: fmt(this.r),\n            g: fmt(this.g),\n            b: fmt(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA relative values interpolated into a string\n     */\n    TinyColor.prototype.toPercentageRgbString = function () {\n        var rnd = function (x) { return Math.round(util_1.bound01(x, 255) * 100); };\n        return this.a === 1\n            ? \"rgb(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%)\"\n            : \"rgba(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * The 'real' name of the color -if there is one.\n     */\n    TinyColor.prototype.toName = function () {\n        if (this.a === 0) {\n            return 'transparent';\n        }\n        if (this.a < 1) {\n            return false;\n        }\n        var hex = '#' + conversion_1.rgbToHex(this.r, this.g, this.b, false);\n        for (var _i = 0, _a = Object.entries(css_color_names_1.names); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            if (hex === value) {\n                return key;\n            }\n        }\n        return false;\n    };\n    TinyColor.prototype.toString = function (format) {\n        var formatSet = Boolean(format);\n        format = format !== null && format !== void 0 ? format : this.format;\n        var formattedString = false;\n        var hasAlpha = this.a < 1 && this.a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === 'name' && this.a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === 'rgb') {\n            formattedString = this.toRgbString();\n        }\n        if (format === 'prgb') {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === 'hex' || format === 'hex6') {\n            formattedString = this.toHexString();\n        }\n        if (format === 'hex3') {\n            formattedString = this.toHexString(true);\n        }\n        if (format === 'hex4') {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === 'hex8') {\n            formattedString = this.toHex8String();\n        }\n        if (format === 'name') {\n            formattedString = this.toName();\n        }\n        if (format === 'hsl') {\n            formattedString = this.toHslString();\n        }\n        if (format === 'hsv') {\n            formattedString = this.toHsvString();\n        }\n        return formattedString || this.toHexString();\n    };\n    TinyColor.prototype.toNumber = function () {\n        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n    };\n    TinyColor.prototype.clone = function () {\n        return new TinyColor(this.toString());\n    };\n    /**\n     * Lighten the color a given amount. Providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.lighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l += amount / 100;\n        hsl.l = util_1.clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Brighten the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.brighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var rgb = this.toRgb();\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n        return new TinyColor(rgb);\n    };\n    /**\n     * Darken the color a given amount, from 0 to 100.\n     * Providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.darken = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = util_1.clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the color with pure white, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.tint = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('white', amount);\n    };\n    /**\n     * Mix the color with pure black, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.shade = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('black', amount);\n    };\n    /**\n     * Desaturate the color a given amount, from 0 to 100.\n     * Providing 100 will is the same as calling greyscale\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.desaturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = util_1.clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Saturate the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.saturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s += amount / 100;\n        hsl.s = util_1.clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Completely desaturates a color into greyscale.\n     * Same as calling `desaturate(100)`\n     */\n    TinyColor.prototype.greyscale = function () {\n        return this.desaturate(100);\n    };\n    /**\n     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n     * Values outside of this range will be wrapped into this range.\n     */\n    TinyColor.prototype.spin = function (amount) {\n        var hsl = this.toHsl();\n        var hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the current color a given amount with another color, from 0 to 100.\n     * 0 means no mixing (return current color).\n     */\n    TinyColor.prototype.mix = function (color, amount) {\n        if (amount === void 0) { amount = 50; }\n        var rgb1 = this.toRgb();\n        var rgb2 = new TinyColor(color).toRgb();\n        var p = amount / 100;\n        var rgba = {\n            r: (rgb2.r - rgb1.r) * p + rgb1.r,\n            g: (rgb2.g - rgb1.g) * p + rgb1.g,\n            b: (rgb2.b - rgb1.b) * p + rgb1.b,\n            a: (rgb2.a - rgb1.a) * p + rgb1.a,\n        };\n        return new TinyColor(rgba);\n    };\n    TinyColor.prototype.analogous = function (results, slices) {\n        if (results === void 0) { results = 6; }\n        if (slices === void 0) { slices = 30; }\n        var hsl = this.toHsl();\n        var part = 360 / slices;\n        var ret = [this];\n        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(new TinyColor(hsl));\n        }\n        return ret;\n    };\n    /**\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\n     */\n    TinyColor.prototype.complement = function () {\n        var hsl = this.toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.monochromatic = function (results) {\n        if (results === void 0) { results = 6; }\n        var hsv = this.toHsv();\n        var h = hsv.h;\n        var s = hsv.s;\n        var v = hsv.v;\n        var res = [];\n        var modification = 1 / results;\n        while (results--) {\n            res.push(new TinyColor({ h: h, s: s, v: v }));\n            v = (v + modification) % 1;\n        }\n        return res;\n    };\n    TinyColor.prototype.splitcomplement = function () {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        return [\n            this,\n            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n        ];\n    };\n    /**\n     * Compute how the color would appear on a background\n     */\n    TinyColor.prototype.onBackground = function (background) {\n        var fg = this.toRgb();\n        var bg = new TinyColor(background).toRgb();\n        return new TinyColor({\n            r: bg.r + (fg.r - bg.r) * fg.a,\n            g: bg.g + (fg.g - bg.g) * fg.a,\n            b: bg.b + (fg.b - bg.b) * fg.a,\n        });\n    };\n    /**\n     * Alias for `polyad(3)`\n     */\n    TinyColor.prototype.triad = function () {\n        return this.polyad(3);\n    };\n    /**\n     * Alias for `polyad(4)`\n     */\n    TinyColor.prototype.tetrad = function () {\n        return this.polyad(4);\n    };\n    /**\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\n     */\n    TinyColor.prototype.polyad = function (n) {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        var result = [this];\n        var increment = 360 / n;\n        for (var i = 1; i < n; i++) {\n            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\n        }\n        return result;\n    };\n    /**\n     * compare color vs current color\n     */\n    TinyColor.prototype.equals = function (color) {\n        return this.toRgbString() === new TinyColor(color).toRgbString();\n    };\n    return TinyColor;\n}());\nexports.TinyColor = TinyColor;\n// kept for backwards compatability with v1\nfunction tinycolor(color, opts) {\n    if (color === void 0) { color = ''; }\n    if (opts === void 0) { opts = {}; }\n    return new TinyColor(color, opts);\n}\nexports.tinycolor = tinycolor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\n__exportStar(require(\"./index\"), exports);\n__exportStar(require(\"./css-color-names\"), exports);\n__exportStar(require(\"./readability\"), exports);\n__exportStar(require(\"./to-ms-filter\"), exports);\n__exportStar(require(\"./from-ratio\"), exports);\n__exportStar(require(\"./format-input\"), exports);\n__exportStar(require(\"./random\"), exports);\n__exportStar(require(\"./interfaces\"), exports);\n__exportStar(require(\"./conversion\"), exports);\n// kept for backwards compatability with v1\nexports.default = index_1.tinycolor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bounds = exports.random = void 0;\n// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\nvar index_1 = require(\"./index\");\nfunction random(options) {\n    if (options === void 0) { options = {}; }\n    // Check if we need to generate multiple colors\n    if (options.count !== undefined &&\n        options.count !== null) {\n        var totalColors = options.count;\n        var colors = [];\n        options.count = undefined;\n        while (totalColors > colors.length) {\n            // Since we're generating multiple colors,\n            // incremement the seed. Otherwise we'd just\n            // generate the same color each time...\n            options.count = null;\n            if (options.seed) {\n                options.seed += 1;\n            }\n            colors.push(random(options));\n        }\n        options.count = totalColors;\n        return colors;\n    }\n    // First we pick a hue (H)\n    var h = pickHue(options.hue, options.seed);\n    // Then use H to determine saturation (S)\n    var s = pickSaturation(h, options);\n    // Then use S and H to determine brightness (B).\n    var v = pickBrightness(h, s, options);\n    var res = { h: h, s: s, v: v };\n    if (options.alpha !== undefined) {\n        res.a = options.alpha;\n    }\n    // Then we return the HSB color in the desired format\n    return new index_1.TinyColor(res);\n}\nexports.random = random;\nfunction pickHue(hue, seed) {\n    var hueRange = getHueRange(hue);\n    var res = randomWithin(hueRange, seed);\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (res < 0) {\n        res = 360 + res;\n    }\n    return res;\n}\nfunction pickSaturation(hue, options) {\n    if (options.hue === 'monochrome') {\n        return 0;\n    }\n    if (options.luminosity === 'random') {\n        return randomWithin([0, 100], options.seed);\n    }\n    var saturationRange = getColorInfo(hue).saturationRange;\n    var sMin = saturationRange[0];\n    var sMax = saturationRange[1];\n    switch (options.luminosity) {\n        case 'bright':\n            sMin = 55;\n            break;\n        case 'dark':\n            sMin = sMax - 10;\n            break;\n        case 'light':\n            sMax = 55;\n            break;\n        default:\n            break;\n    }\n    return randomWithin([sMin, sMax], options.seed);\n}\nfunction pickBrightness(H, S, options) {\n    var bMin = getMinimumBrightness(H, S);\n    var bMax = 100;\n    switch (options.luminosity) {\n        case 'dark':\n            bMax = bMin + 20;\n            break;\n        case 'light':\n            bMin = (bMax + bMin) / 2;\n            break;\n        case 'random':\n            bMin = 0;\n            bMax = 100;\n            break;\n        default:\n            break;\n    }\n    return randomWithin([bMin, bMax], options.seed);\n}\nfunction getMinimumBrightness(H, S) {\n    var lowerBounds = getColorInfo(H).lowerBounds;\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n        var s1 = lowerBounds[i][0];\n        var v1 = lowerBounds[i][1];\n        var s2 = lowerBounds[i + 1][0];\n        var v2 = lowerBounds[i + 1][1];\n        if (S >= s1 && S <= s2) {\n            var m = (v2 - v1) / (s2 - s1);\n            var b = v1 - m * s1;\n            return m * S + b;\n        }\n    }\n    return 0;\n}\nfunction getHueRange(colorInput) {\n    var num = parseInt(colorInput, 10);\n    if (!Number.isNaN(num) && num < 360 && num > 0) {\n        return [num, num];\n    }\n    if (typeof colorInput === 'string') {\n        var namedColor = exports.bounds.find(function (n) { return n.name === colorInput; });\n        if (namedColor) {\n            var color = defineColor(namedColor);\n            if (color.hueRange) {\n                return color.hueRange;\n            }\n        }\n        var parsed = new index_1.TinyColor(colorInput);\n        if (parsed.isValid) {\n            var hue = parsed.toHsv().h;\n            return [hue, hue];\n        }\n    }\n    return [0, 360];\n}\nfunction getColorInfo(hue) {\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n        hue -= 360;\n    }\n    for (var _i = 0, bounds_1 = exports.bounds; _i < bounds_1.length; _i++) {\n        var bound = bounds_1[_i];\n        var color = defineColor(bound);\n        if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {\n            return color;\n        }\n    }\n    throw Error('Color not found');\n}\nfunction randomWithin(range, seed) {\n    if (seed === undefined) {\n        return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\n    }\n    // Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n    var max = range[1] || 1;\n    var min = range[0] || 0;\n    seed = (seed * 9301 + 49297) % 233280;\n    var rnd = seed / 233280.0;\n    return Math.floor(min + rnd * (max - min));\n}\nfunction defineColor(bound) {\n    var sMin = bound.lowerBounds[0][0];\n    var sMax = bound.lowerBounds[bound.lowerBounds.length - 1][0];\n    var bMin = bound.lowerBounds[bound.lowerBounds.length - 1][1];\n    var bMax = bound.lowerBounds[0][1];\n    return {\n        name: bound.name,\n        hueRange: bound.hueRange,\n        lowerBounds: bound.lowerBounds,\n        saturationRange: [sMin, sMax],\n        brightnessRange: [bMin, bMax],\n    };\n}\n/**\n * @hidden\n */\nexports.bounds = [\n    {\n        name: 'monochrome',\n        hueRange: null,\n        lowerBounds: [\n            [0, 0],\n            [100, 0],\n        ],\n    },\n    {\n        name: 'red',\n        hueRange: [-26, 18],\n        lowerBounds: [\n            [20, 100],\n            [30, 92],\n            [40, 89],\n            [50, 85],\n            [60, 78],\n            [70, 70],\n            [80, 60],\n            [90, 55],\n            [100, 50],\n        ],\n    },\n    {\n        name: 'orange',\n        hueRange: [19, 46],\n        lowerBounds: [\n            [20, 100],\n            [30, 93],\n            [40, 88],\n            [50, 86],\n            [60, 85],\n            [70, 70],\n            [100, 70],\n        ],\n    },\n    {\n        name: 'yellow',\n        hueRange: [47, 62],\n        lowerBounds: [\n            [25, 100],\n            [40, 94],\n            [50, 89],\n            [60, 86],\n            [70, 84],\n            [80, 82],\n            [90, 80],\n            [100, 75],\n        ],\n    },\n    {\n        name: 'green',\n        hueRange: [63, 178],\n        lowerBounds: [\n            [30, 100],\n            [40, 90],\n            [50, 85],\n            [60, 81],\n            [70, 74],\n            [80, 64],\n            [90, 50],\n            [100, 40],\n        ],\n    },\n    {\n        name: 'blue',\n        hueRange: [179, 257],\n        lowerBounds: [\n            [20, 100],\n            [30, 86],\n            [40, 80],\n            [50, 74],\n            [60, 60],\n            [70, 52],\n            [80, 44],\n            [90, 39],\n            [100, 35],\n        ],\n    },\n    {\n        name: 'purple',\n        hueRange: [258, 282],\n        lowerBounds: [\n            [20, 100],\n            [30, 87],\n            [40, 79],\n            [50, 70],\n            [60, 65],\n            [70, 59],\n            [80, 52],\n            [90, 45],\n            [100, 42],\n        ],\n    },\n    {\n        name: 'pink',\n        hueRange: [283, 334],\n        lowerBounds: [\n            [20, 100],\n            [30, 90],\n            [40, 86],\n            [60, 84],\n            [80, 80],\n            [90, 75],\n            [100, 73],\n        ],\n    },\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mostReadable = exports.isReadable = exports.readability = void 0;\nvar index_1 = require(\"./index\");\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n/**\n * AKA `contrast`\n *\n * Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n */\nfunction readability(color1, color2) {\n    var c1 = new index_1.TinyColor(color1);\n    var c2 = new index_1.TinyColor(color2);\n    return ((Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) /\n        (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05));\n}\nexports.readability = readability;\n/**\n * Ensure that foreground and background color combinations meet WCAG2 guidelines.\n * The third argument is an object.\n *      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n *      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n * If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n *\n * Example\n * ```ts\n * new TinyColor().isReadable('#000', '#111') => false\n * new TinyColor().isReadable('#000', '#111', { level: 'AA', size: 'large' }) => false\n * ```\n */\nfunction isReadable(color1, color2, wcag2) {\n    var _a, _b;\n    if (wcag2 === void 0) { wcag2 = { level: 'AA', size: 'small' }; }\n    var readabilityLevel = readability(color1, color2);\n    switch (((_a = wcag2.level) !== null && _a !== void 0 ? _a : 'AA') + ((_b = wcag2.size) !== null && _b !== void 0 ? _b : 'small')) {\n        case 'AAsmall':\n        case 'AAAlarge':\n            return readabilityLevel >= 4.5;\n        case 'AAlarge':\n            return readabilityLevel >= 3;\n        case 'AAAsmall':\n            return readabilityLevel >= 7;\n        default:\n            return false;\n    }\n}\nexports.isReadable = isReadable;\n/**\n * Given a base color and a list of possible foreground or background\n * colors for that base, returns the most readable color.\n * Optionally returns Black or White if the most readable color is unreadable.\n *\n * @param baseColor - the base color.\n * @param colorList - array of colors to pick the most readable one from.\n * @param args - and object with extra arguments\n *\n * Example\n * ```ts\n * new TinyColor().mostReadable('#123', ['#124\", \"#125'], { includeFallbackColors: false }).toHexString(); // \"#112255\"\n * new TinyColor().mostReadable('#123', ['#124\", \"#125'],{ includeFallbackColors: true }).toHexString();  // \"#ffffff\"\n * new TinyColor().mostReadable('#a8015a', [\"#faf3f3\"], { includeFallbackColors:true, level: 'AAA', size: 'large' }).toHexString(); // \"#faf3f3\"\n * new TinyColor().mostReadable('#a8015a', [\"#faf3f3\"], { includeFallbackColors:true, level: 'AAA', size: 'small' }).toHexString(); // \"#ffffff\"\n * ```\n */\nfunction mostReadable(baseColor, colorList, args) {\n    if (args === void 0) { args = { includeFallbackColors: false, level: 'AA', size: 'small' }; }\n    var bestColor = null;\n    var bestScore = 0;\n    var includeFallbackColors = args.includeFallbackColors, level = args.level, size = args.size;\n    for (var _i = 0, colorList_1 = colorList; _i < colorList_1.length; _i++) {\n        var color = colorList_1[_i];\n        var score = readability(baseColor, color);\n        if (score > bestScore) {\n            bestScore = score;\n            bestColor = new index_1.TinyColor(color);\n        }\n    }\n    if (isReadable(baseColor, bestColor, { level: level, size: size }) || !includeFallbackColors) {\n        return bestColor;\n    }\n    args.includeFallbackColors = false;\n    return mostReadable(baseColor, ['#fff', '#000'], args);\n}\nexports.mostReadable = mostReadable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toMsFilter = void 0;\nvar conversion_1 = require(\"./conversion\");\nvar index_1 = require(\"./index\");\n/**\n * Returns the color represented as a Microsoft filter for use in old versions of IE.\n */\nfunction toMsFilter(firstColor, secondColor) {\n    var color = new index_1.TinyColor(firstColor);\n    var hex8String = '#' + conversion_1.rgbaToArgbHex(color.r, color.g, color.b, color.a);\n    var secondHex8String = hex8String;\n    var gradientType = color.gradientType ? 'GradientType = 1, ' : '';\n    if (secondColor) {\n        var s = new index_1.TinyColor(secondColor);\n        secondHex8String = '#' + conversion_1.rgbaToArgbHex(s.r, s.g, s.b, s.a);\n    }\n    return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n}\nexports.toMsFilter = toMsFilter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pad2 = exports.convertToPercentage = exports.boundAlpha = exports.isPercentage = exports.isOnePointZero = exports.clamp01 = exports.bound01 = void 0;\n/**\n * Take input from [0, n] and return it as [0, 1]\n * @hidden\n */\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    var isPercent = isPercentage(n);\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n    // Automatically convert percentage into number\n    if (isPercent) {\n        n = parseInt(String(n * max), 10) / 100;\n    }\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    // Convert into [0, 1] range if it isn't already\n    if (max === 360) {\n        // If n is a hue given in degrees,\n        // wrap around out-of-range values into [0, 360] range\n        // then convert into [0, 1].\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\n    }\n    else {\n        // If n not a hue given in degrees\n        // Convert into [0, 1] range if it isn't already.\n        n = (n % max) / parseFloat(String(max));\n    }\n    return n;\n}\nexports.bound01 = bound01;\n/**\n * Force a number between 0 and 1\n * @hidden\n */\nfunction clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\nexports.clamp01 = clamp01;\n/**\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n * @hidden\n */\nfunction isOnePointZero(n) {\n    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\n}\nexports.isOnePointZero = isOnePointZero;\n/**\n * Check to see if string passed in is a percentage\n * @hidden\n */\nfunction isPercentage(n) {\n    return typeof n === 'string' && n.indexOf('%') !== -1;\n}\nexports.isPercentage = isPercentage;\n/**\n * Return a valid alpha value [0,1] with all invalid values being set to 1\n * @hidden\n */\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n    return a;\n}\nexports.boundAlpha = boundAlpha;\n/**\n * Replace a decimal with it's percentage value\n * @hidden\n */\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        return Number(n) * 100 + \"%\";\n    }\n    return n;\n}\nexports.convertToPercentage = convertToPercentage;\n/**\n * Force a hex value to have 2 characters\n * @hidden\n */\nfunction pad2(c) {\n    return c.length === 1 ? '0' + c : String(c);\n}\nexports.pad2 = pad2;\n"],"names":["Object","defineProperty","exports","value","numberInputToObject","parseIntFromHex","convertHexToDecimal","convertDecimalToHex","rgbaToArgbHex","rgbaToHex","rgbToHex","hsvToRgb","rgbToHsv","hslToRgb","rgbToHsl","rgbToRgb","util_1","hue2rgb","p","q","t","d","Math","round","parseFloat","toString","val","parseInt","r","g","b","bound01","max","min","h","s","l","v","i","floor","f","mod","allow3Char","hex","pad2","startsWith","charAt","join","a","allow4Char","color","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gold","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","isValidCSSUnit","stringInputToObject","inputToRGB","conversion_1","css_color_names_1","rgb","ok","format","String","substr","convertToPercentage","prototype","hasOwnProperty","call","boundAlpha","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","matchers","RegExp","rgba","hsl","hsla","hsv","hsva","hex3","hex6","hex4","hex8","trim","toLowerCase","length","named","match","exec","Boolean","legacyRandom","fromRatio","index_1","ratio","opts","newColor","undefined","Number","TinyColor","random","tinycolor","format_input_1","_a","this","originalInput","roundA","gradientType","isValid","isDark","getBrightness","isLight","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","pow","getAlpha","setAlpha","alpha","toHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","toHex8String","toRgbString","toPercentageRgb","fmt","x","toPercentageRgbString","rnd","toName","_i","entries","_b","key","formatSet","formattedString","hasAlpha","toNumber","clone","lighten","amount","clamp01","brighten","darken","tint","mix","shade","desaturate","saturate","greyscale","spin","hue","rgb1","rgb2","analogous","results","slices","part","ret","push","complement","monochromatic","res","modification","splitcomplement","onBackground","background","fg","bg","triad","polyad","tetrad","n","result","increment","equals","__createBinding","create","o","m","k","k2","enumerable","get","__exportStar","bounds","getColorInfo","bounds_1","defineColor","hueRange","Error","randomWithin","range","seed","bound","sMin","lowerBounds","sMax","bMin","bMax","name","saturationRange","brightnessRange","options","count","totalColors","colors","colorInput","num","isNaN","namedColor","find","parsed","getHueRange","pickHue","luminosity","pickSaturation","H","S","s1","v1","s2","v2","getMinimumBrightness","pickBrightness","mostReadable","isReadable","readability","color1","color2","c1","c2","wcag2","level","size","readabilityLevel","baseColor","colorList","args","includeFallbackColors","bestColor","bestScore","colorList_1","score","toMsFilter","firstColor","secondColor","hex8String","secondHex8String","isOnePointZero","indexOf","isPercentage","isPercent","abs","c"],"sourceRoot":""}