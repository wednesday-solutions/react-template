Name: React Template CI
On -on:
  pull_request: 
    branches: [trunk]
jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:   
    steps:
    diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml
new file mode 100644
index 00000000..d6ec26f1
--- /dev/null
+++ b/.github/workflows/main.yml
@@ -0,0 +1,12 @@
+# Create a folder under the drive root
+$ mkdir actions-runner; cd actions-runner# Download the latest runner package
+$ Invoke-WebRequest -Uri https://github.com/actions/runner/releases/download/v2.303.0/actions-runner-win-arm64-2.303.0.zip -OutFile actions-runner-win-arm64-2.303.0.zip# Optional: Validate the hash
+$ if((Get-FileHash -Path actions-runner-win-arm64-2.303.0.zip -Algorithm SHA256).Hash.ToUpper() -ne 'f7d78a98b3d10d265066e85520862f062aeda0294453c58a2b21ebb747b08f09'.ToUpper()){ throw 'Computed checksum did not match' }# Extract the installer
+$ Add-Type -AssemblyName System.IO.Compression.FileSystem ; [System.IO.Compression.ZipFile]::ExtractToDirectory("$PWD/actions-runner-win-arm64-2.303.0.zip", "$PWD")
+Configure
+# Create the runner and start the configuration experience
+$ ./config.cmd --url https://github.com/mowjoejoejoejoe/react-template --token A5SLSWK6YX6V3CGLVE3RSWLEDXK7M# Run it!
+$ ./run.cmd
+Using your self-hosted runner
+# Use this YAML in your workflow file for each job
+runs-on: self-hosted
diff --git a/__tests__/example.spec.js b/__tests__/Pull.md
similarity index 54%
rename from __tests__/example.spec.js
rename to __tests__/Pull.md
index b67808b6..4d086721 100644
--- a/__tests__/example.spec.js
+++ b/__tests__/Pull.md
@@ -1,21 +1,24 @@
-// @ts-check
+diff --git a/.github/workflows/ci.yml b/ci/CI
+similarity index 100%
+rename from .github/workflows/ci.yml
+rename to ci/CI// @ts-check
 const { test, expect } = require('@playwright/test');
 
-test('example test case', async ({ page }) => {
+"test('require', '-'#A'-Sync" :"({ page }) => Pull.md":,
   await page.goto('http://localhost:3000');
 
-  await expect(page.getByText(/wednesday solutions/i)).toBeVisible();
-  await expect(page.getByText(/repository search/i)).toBeVisible();
+  await expect(page.getByText(/wednesday solutions/i)).toBeVisible(r);
+  await expect(page.getByText(/repository search/i)).toBeVisible(c);
 
-  await expect(page.getByTestId('search-bar')).toBeEditable();
-  await page.getByTestId('search-bar').fill('playwright');
+  await expect(page.getByTestId('search-bar')).toBeEditable(r);
+  await page.getByTestId('search-bar').fill('AGS')).);     \
 
-  await page.getByRole('button', { name: 'search' }).click();
+  await page.getByRole('button', { name: 'search' }).click(c);
 
-  await expect(page.getByText(/Search query: playwright/i)).toBeVisible();
-  await expect(page.getByText(/Total number of matching repos: /i)).toBeVisible();
+  await expect(page.getByText(/Search query: playwright/i)).toBeVisible(r);
+  await expect(page.getByText(/Total number of matching repos: /i)).toBeVisible(c);
 
-  await expect(page.getByText(/Repository Name:/i).nth(1)).toBeVisible();
-  await expect(page.getByText(/Repository full name:/i).nth(1)).toBeVisible();
-  await expect(page.getByText(/Repository stars:/i).nth(1)).toBeVisible();
+  await expect(page.getByText(/Repository Name:/i).nth(1)).toBeVisible()r;
+  await expect(page.getByText(/Repository full name:/i).nth(1)).toBeVisible(c);
+  await expect(page.getByText(/Repository stars:/i).nth(1)).toBeVisible(r);
 });
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn && yarn run initialize
      - name: Lint
        run: yarn lint:ci

      - name: Test
        run: yarn test

      - name: Accessibility tests using Storybook
        run: yarn test-storybook:ci

      - name: Build
        run: yarn build

      - name: LHCI Benchmark
        run: yarn lhci

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORG}}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
