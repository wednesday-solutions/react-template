{"version":3,"file":"main.ca61e92f827aa7f6808e.js","mappings":"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","sources":["webpack://react-template/./app/utils/history.js","webpack://react-template/./app/containers/App/Loadable.js","webpack://react-template/./app/components/ScrollToTop/index.js","webpack://react-template/./app/images/favicon.ico","webpack://react-template/./app/.htaccess","webpack://react-template/./app/createRootReducer.js","webpack://react-template/./app/configureStore.js","webpack://react-template/./app/app.js","webpack://react-template/./app/containers/HomeContainer/reducer.js","webpack://react-template/./app/containers/LanguageProvider/reducer.js","webpack://react-template/./app/i18n.js","webpack://react-template/./app/utils/index.js","webpack://react-template/./app/utils/loadable.js","webpack://react-template/./app/utils/routeConstants.js"],"sourcesContent":["import { createBrowserHistory } from 'history';\nimport { isProd, isUAT } from './index';\n\nexport function getBaseName() {\n  if (isProd()) {\n    // GH Pages\n    return '/react-template';\n  }\n  if (isUAT()) {\n    return `/${process.env.BRANCH_NAME}`;\n  }\n\n  return '';\n}\n\nconst history = createBrowserHistory({ basename: getBaseName() });\nexport default history;\n","/**\n *\n * Asynchronously loads the component for App\n *\n */\n\nimport loadable from 'utils/loadable';\n\nexport default loadable(() => import('./index'));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nScrollToTop.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  location: PropTypes.object\n};\nexport default compose(withRouter)(ScrollToTop);\n","export default __webpack_public_path__ + \"favicon.ico\";","export default __webpack_public_path__ + \".htaccess\";","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport languageProviderReducer from 'containers/LanguageProvider/reducer';\nimport homeContainerReducer from 'containers/HomeContainer/reducer';\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createRootReducer(injectedReducer = {}) {\n  return combineReducers({\n    ...injectedReducer,\n    language: languageProviderReducer,\n    homeContainer: homeContainerReducer\n  });\n}\n","/**\n * Create the store with dynamic reducers\n */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport immutableTransform from 'redux-persist-transform-immutable';\nimport storage from 'redux-persist/lib/storage';\nimport createReducer from './createRootReducer';\nimport { createInjectorsEnhancer } from 'redux-injectors';\n\n// redux persit configuration\nconst persistConfig = {\n  version: 1,\n  transforms: [immutableTransform()],\n  key: 'root',\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, createReducer());\n\nexport default function configureStore(initialState = {}) {\n  let composeEnhancers = compose;\n  const reduxSagaMonitorOptions = {};\n\n  // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\n    /* eslint-disable no-underscore-dangle */\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\n    }\n\n    // NOTE: Uncomment the code below to restore support for Redux Saga\n    // Dev Tools once it supports redux-saga version 1.x.x\n    // if (window.__SAGA_MONITOR_EXTENSION__)\n    //   reduxSagaMonitorOptions = {\n    //     sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\n    //   };\n    /* eslint-enable */\n  }\n\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n\n  // Create the store with two middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n  const middlewares = [sagaMiddleware];\n  const enhancers = [applyMiddleware(...middlewares)];\n  const runSaga = sagaMiddleware.run;\n  const injectEnhancer = createInjectorsEnhancer({\n    createReducer,\n    runSaga\n  });\n\n  const store = createStore(persistedReducer, initialState, composeEnhancers(...enhancers, injectEnhancer));\n  const persistor = persistStore(store);\n\n  // Extensions\n  store.runSaga = sagaMiddleware.run;\n  store.injectedReducers = {}; // Reducer registry\n  store.injectedSagas = {}; // Saga registry\n\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept('./createRootReducer', () => {\n      store.replaceReducer(createReducer(store.injectedReducers));\n    });\n  }\n  return { store, persistor };\n}\n","/**\n * app.js\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\n// Needed for redux-saga es6 generator support\n// Import all the third party stuff\nimport React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport history from 'utils/history';\nimport 'sanitize.css/sanitize.css';\n\n// Import root app\nimport App from 'containers/App/Loadable';\n\n// Import Language Provider\nimport ScrollToTop from 'components/ScrollToTop';\n// Load the favicon and the .htaccess file\n/* eslint-disable import/no-unresolved, import/extensions */\nimport '!file-loader?name=[name].[ext]!./images/favicon.ico';\nimport 'file-loader?name=.htaccess!./.htaccess';\n/* eslint-enable import/no-unresolved, import/extensions */\n\nimport configureStore from './configureStore';\n\n// Create redux store with history\nconst initialState = {};\nconst { store, persistor } = configureStore(initialState, history);\nconst container = document.getElementById('app');\nconst root = createRoot(container);\nconst render = (messages) => {\n  root.render(\n    <StrictMode>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Router history={history}>\n            <ScrollToTop>\n              <App />\n            </ScrollToTop>\n          </Router>\n        </PersistGate>\n      </Provider>\n    </StrictMode>\n  );\n};\n\nif (module.hot) {\n  // Hot reloadable React components and translation json files\n  // modules.hot.accept does not accept dynamic dependencies,\n  // have to be constants at compile-time\n  module.hot.accept(['./i18n', 'containers/App'], () => {\n    render();\n  });\n}\n\n// Chunked polyfill for browsers without Intl support\nif (!window.Intl) {\n  Promise.resolve(import('intl'))\n    .then(() => Promise.all([import('intl/locale-data/jsonp/en.js')]))\n    .then(() => render())\n    .catch((err) => {\n      throw err;\n    });\n} else {\n  render();\n}\n\n// Install ServiceWorker and AppCache in the end since\n// it's not most important operation and if main code fails,\n// we do not want it installed\nif (process.env.NODE_ENV === 'production') {\n  require('@lcdp/offline-plugin/runtime').install({\n    onUpdating: () => {\n      // eslint-disable-next-line\n      console.log('SW Event: onUpdating');\n    },\n    onUpdateReady: () => {\n      // eslint-disable-next-line\n      console.log('SW Event: onUpdateReady');\n      // Tells to new SW to take control immediately\n      require('@lcdp/offline-plugin/runtime').applyUpdate();\n    },\n    onUpdated: () => {\n      // eslint-disable-next-line\n      console.log('SW Event: onUpdated');\n      // Reload the webpage to load into the new version\n      window.location.reload();\n    },\n\n    onUpdateFailed: () => {\n      // eslint-disable-next-line\n      console.log('SW Event: onUpdateFailed');\n    }\n  });\n}\n","/*\n *\n * HomeContainer reducer\n *\n */\nimport produce from 'immer';\nimport { createActions } from 'reduxsauce';\nimport get from 'lodash/get';\n\nexport const { Types: homeContainerTypes, Creators: homeContainerCreators } = createActions({\n  requestGetGithubRepos: ['repoName'],\n  successGetGithubRepos: ['data'],\n  failureGetGithubRepos: ['error'],\n  clearGithubRepos: {}\n});\nexport const initialState = { repoName: null, reposData: {}, reposError: null };\n\n/* eslint-disable default-case, no-param-reassign */\nexport const homeContainerReducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case homeContainerTypes.REQUEST_GET_GITHUB_REPOS:\n        draft.repoName = action.repoName;\n        break;\n      case homeContainerTypes.CLEAR_GITHUB_REPOS:\n        draft.repoName = null;\n        draft.reposError = null;\n        draft.reposData = {};\n        break;\n      case homeContainerTypes.SUCCESS_GET_GITHUB_REPOS:\n        draft.reposData = action.data;\n        break;\n      case homeContainerTypes.FAILURE_GET_GITHUB_REPOS:\n        draft.reposError = get(action.error, 'message', 'something_went_wrong');\n        break;\n    }\n  });\n\nexport default homeContainerReducer;\n","/*\n *\n * LanguageProvider reducer\n *\n */\nimport { createActions } from 'reduxsauce';\nimport produce from 'immer';\nimport { DEFAULT_LOCALE } from '@app/i18n';\n\nexport const { Types: languageProviderTypes, Creators: languageProviderActions } = createActions({\n  changeLocale: ['locale']\n});\n\nexport const initialState = {\n  locale: DEFAULT_LOCALE\n};\n\n/* eslint-disable default-case, no-param-reassign */\nexport const languageProviderReducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case languageProviderTypes.CHANGE_LOCALE:\n        draft.locale = action.locale;\n        break;\n    }\n  });\n\nexport default languageProviderReducer;\n","/**\n * i18n.js\n *\n * This will setup the i18n language files and locale data for your app.\n *\n *   IMPORTANT: This file is used by the internal build\n *   script `extract-intl`, and must use CommonJS module syntax\n *   You CANNOT use import/export in this file.\n */\n//eslint-disable-line\n\nconst enTranslationMessages = require('./translations/en.json');\n\nexport const DEFAULT_LOCALE = 'en';\n\n// prettier-ignore\nexport const appLocales = [\n  'en',\n];\n\nexport const formatTranslationMessages = (locale, messages) => {\n  const defaultFormattedMessages =\n    locale !== DEFAULT_LOCALE ? formatTranslationMessages(DEFAULT_LOCALE, enTranslationMessages) : {};\n  const flattenFormattedMessages = (formattedMessages, key) => {\n    const formattedMessage =\n      !messages[key] && locale !== DEFAULT_LOCALE ? defaultFormattedMessages[key] : messages[key];\n    return Object.assign(formattedMessages, { [key]: formattedMessage });\n  };\n  return Object.keys(messages).reduce(flattenFormattedMessages, {});\n};\n\nexport const translationMessages = {\n  en: formatTranslationMessages('en', enTranslationMessages)\n};\n","import find from 'lodash/find';\nimport get from 'lodash/get';\nimport routeConstants from './routeConstants';\n\n/**\n * Get details of the current route from the route config.\n * If location.pathname doesn't match any entry in the routeConstants it will return null\n * @author mac\n * @date 2020-05-07\n * @param {any} location\n * @returns {any}\n */\nexport const getCurrentRouteDetails = (location) => {\n  if (!get(location, 'pathname')) {\n    return null;\n  }\n  const route = find(\n    Object.keys(routeConstants),\n    (key) => routeConstants[key].route === location.pathname || `${routeConstants[key].route}/` === location.pathname\n  );\n  if (route) {\n    return routeConstants[route];\n  }\n  return null;\n};\nexport const mapKeysDeep = (obj, fn) => {\n  if (Array.isArray(obj)) {\n    return obj.map((val) => mapKeysDeep(val, fn));\n  }\n  if (typeof obj === 'object') {\n    return Object.keys(obj).reduce((acc, current) => {\n      const key = fn(current);\n      const val = obj[current];\n      acc[key] = val !== null && typeof val === 'object' ? mapKeysDeep(val, fn) : val;\n      return acc;\n    }, {});\n  }\n  return obj;\n};\n\nexport const isLocal = () => {\n  try {\n    const local = JSON.parse(process.env.IS_LOCAL);\n    return typeof local === 'boolean' && local;\n  } catch {\n    // continue regardless of error\n  }\n  return false;\n};\n\nexport function isUAT() {\n  return process.env.ENVIRONMENT_NAME === 'development' && process.env.NODE_ENV === 'production';\n}\n\nexport function isProd() {\n  return process.env.ENVIRONMENT_NAME === 'production' && process.env.NODE_ENV === 'production';\n}\n","import React, { lazy, Suspense } from 'react';\n\nconst loadable = (importFunc, { fallback = null } = { fallback: null }) => {\n  const LazyComponent = lazy(importFunc);\n\n  return (props) => (\n    <Suspense fallback={fallback}>\n      <LazyComponent {...props} />\n    </Suspense>\n  );\n};\n\nexport default loadable;\n","export default {\n  repos: {\n    route: '/',\n    props: {\n      maxwidth: 500,\n      padding: 20\n    },\n    exact: true\n  }\n};\n"],"names":["createBrowserHistory","basename","isProd","isUAT","process","env","BRANCH_NAME","loadable","ScrollToTop","prevProps","this","props","location","window","scrollTo","children","React","compose","withRouter","createRootReducer","injectedReducer","combineReducers","language","languageProviderReducer","homeContainer","homeContainerReducer","persistConfig","version","transforms","immutableTransform","key","storage","persistedReducer","persistReducer","createReducer","initialState","composeEnhancers","reduxSagaMonitorOptions","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","runSaga","run","injectEnhancer","createInjectorsEnhancer","store","createStore","persistor","persistStore","injectedReducers","injectedSagas","configureStore","history","container","document","getElementById","root","createRoot","render","messages","StrictMode","Provider","loading","Router","Intl","Promise","resolve","then","all","catch","err","require","onUpdating","console","log","onUpdateReady","onUpdated","reload","onUpdateFailed","createActions","requestGetGithubRepos","successGetGithubRepos","failureGetGithubRepos","clearGithubRepos","homeContainerTypes","Types","homeContainerCreators","Creators","repoName","reposData","reposError","state","action","produce","draft","type","REQUEST_GET_GITHUB_REPOS","CLEAR_GITHUB_REPOS","SUCCESS_GET_GITHUB_REPOS","data","FAILURE_GET_GITHUB_REPOS","get","error","changeLocale","languageProviderTypes","locale","DEFAULT_LOCALE","CHANGE_LOCALE","enTranslationMessages","translationMessages","en","formatTranslationMessages","defaultFormattedMessages","Object","keys","reduce","formattedMessages","formattedMessage","assign","mapKeysDeep","obj","fn","Array","isArray","map","val","acc","current","importFunc","fallback","LazyComponent","lazy","Suspense","repos","route","maxwidth","padding","exact"],"sourceRoot":""}