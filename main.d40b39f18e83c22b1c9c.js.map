{"version":3,"file":"main.d40b39f18e83c22b1c9c.js","mappings":"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","sources":["webpack://react-template/./app/utils/history.js","webpack://react-template/./app/containers/App/Loadable.js","webpack://react-template/./app/components/IntlGlobalProvider/index.js","webpack://react-template/./app/i18n.js","webpack://react-template/./app/containers/LanguageProvider/reducer.js","webpack://react-template/./app/containers/LanguageProvider/selectors.js","webpack://react-template/./app/containers/LanguageProvider/index.js","webpack://react-template/./app/components/ScrollToTop/index.js","webpack://react-template/./app/components/ErrorBoundary/index.js","webpack://react-template/./app/images/favicon.ico","webpack://react-template/./app/.htaccess","webpack://react-template/./app/createRootReducer.js","webpack://react-template/./app/configureStore.js","webpack://react-template/./app/app.js","webpack://react-template/./app/containers/HomeContainer/reducer.js","webpack://react-template/./app/utils/index.js","webpack://react-template/./app/utils/loadable.js","webpack://react-template/./app/utils/routeConstants.js"],"sourcesContent":["import { createBrowserHistory } from 'history';\nimport { isProd, isUAT } from './index';\n\nexport function getBaseName() {\n  if (isProd()) {\n    // GH Pages\n    return '/react-template';\n  }\n  if (isUAT()) {\n    return `/${process.env.BRANCH_NAME}`;\n  }\n\n  return '';\n}\n\nconst history = createBrowserHistory({ basename: getBaseName() });\nexport default history;\n","/**\n *\n * Asynchronously loads the component for App\n *\n */\n\nimport loadable from 'utils/loadable';\n\nexport default loadable(() => import('./index'));\n","// eslint-disable-next-line\nimport React from 'react';\nimport { useIntl } from 'react-intl';\n\n// 'intl' service singleton reference\nlet intl;\n\nexport function IntlGlobalProvider({ children }) {\n  intl = useIntl(); // Keep the 'intl' service reference\n  return children;\n}\n\n// setter function to set intl value inside tests\nexport const setIntl = (intlValue) => {\n  intl = intlValue;\n};\n\nexport const translate = (id, values = {}) => intl.formatMessage({ id }, values);\n","/**\n * i18n.js\n *\n * This will setup the i18n language files and locale data for your app.\n *\n *   IMPORTANT: This file is used by the internal build\n *   script `extract-intl`, and must use CommonJS module syntax\n *   You CANNOT use import/export in this file.\n */\n//eslint-disable-line\n\nconst enTranslationMessages = require('./translations/en.json');\n\nexport const DEFAULT_LOCALE = 'en';\n\n// prettier-ignore\nexport const appLocales = [\n  'en',\n];\n\nexport const formatTranslationMessages = (locale, messages) => {\n  const defaultFormattedMessages =\n    locale !== DEFAULT_LOCALE ? formatTranslationMessages(DEFAULT_LOCALE, enTranslationMessages) : {};\n  const flattenFormattedMessages = (formattedMessages, key) => {\n    const formattedMessage =\n      !messages[key] && locale !== DEFAULT_LOCALE ? defaultFormattedMessages[key] : messages[key];\n    return Object.assign(formattedMessages, { [key]: formattedMessage });\n  };\n  return Object.keys(messages).reduce(flattenFormattedMessages, {});\n};\n\nexport const translationMessages = {\n  en: formatTranslationMessages('en', enTranslationMessages)\n};\n","/*\n *\n * LanguageProvider reducer\n *\n */\nimport { createActions } from 'reduxsauce';\nimport produce from 'immer';\nimport { DEFAULT_LOCALE } from '@app/i18n';\n\nexport const { Types: languageProviderTypes, Creators: languageProviderActions } = createActions({\n  changeLocale: ['locale']\n});\n\nexport const initialState = {\n  locale: DEFAULT_LOCALE\n};\n\n/* eslint-disable default-case, no-param-reassign */\nexport const languageProviderReducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case languageProviderTypes.CHANGE_LOCALE:\n        draft.locale = action.locale;\n        break;\n    }\n  });\n\nexport default languageProviderReducer;\n","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the languageToggle state domain\n */\nconst selectLanguage = (state) => state.language || initialState;\n\n/**\n * Select the language locale\n */\n\nconst makeSelectLocale = () => createSelector(selectLanguage, (languageState) => languageState.locale);\n\nexport { selectLanguage, makeSelectLocale };\n","/*\n *\n * LanguageProvider\n *\n * this component connects the redux state language locale to the\n * IntlProvider component and i18n messages (loaded from `app/translations`)\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { IntlProvider } from 'react-intl';\nimport { IntlGlobalProvider } from '@app/components/IntlGlobalProvider';\nimport { makeSelectLocale } from './selectors';\n\nexport function LanguageProvider(props) {\n  return (\n    <IntlProvider locale={props.locale} key={props.locale} messages={props.messages[props.locale]}>\n      <IntlGlobalProvider>{React.Children.only(props.children)}</IntlGlobalProvider>\n    </IntlProvider>\n  );\n}\n\nLanguageProvider.propTypes = {\n  locale: PropTypes.string,\n  messages: PropTypes.object,\n  children: PropTypes.element.isRequired\n};\n\nconst mapStateToProps = createSelector(makeSelectLocale(), (locale) => ({\n  locale\n}));\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageProvider);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nScrollToTop.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  location: PropTypes.object\n};\nexport default compose(withRouter)(ScrollToTop);\n","/**\n *\n * ErrorBoundary\n *\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from '@components/IntlGlobalProvider/index';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // handle gracefully\n      return <h1>{translate('something_went_wrong')}</h1>;\n    }\n    return this.props.children;\n  }\n}\nErrorBoundary.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport default ErrorBoundary;\n","export default __webpack_public_path__ + \"favicon.ico\";","export default __webpack_public_path__ + \".htaccess\";","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport languageProviderReducer from 'containers/LanguageProvider/reducer';\nimport homeContainerReducer from 'containers/HomeContainer/reducer';\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createRootReducer(injectedReducer = {}) {\n  return combineReducers({\n    ...injectedReducer,\n    language: languageProviderReducer,\n    homeContainer: homeContainerReducer\n  });\n}\n","/**\n * Create the store with dynamic reducers\n */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport immutableTransform from 'redux-persist-transform-immutable';\nimport storage from 'redux-persist/lib/storage';\nimport createReducer from './createRootReducer';\nimport { createInjectorsEnhancer } from 'redux-injectors';\n\n// redux persit configuration\nconst persistConfig = {\n  version: 1,\n  transforms: [immutableTransform()],\n  key: 'root',\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, createReducer());\n\nexport default function configureStore(initialState = {}) {\n  let composeEnhancers = compose;\n  const reduxSagaMonitorOptions = {};\n\n  // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\n    /* eslint-disable no-underscore-dangle */\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\n    }\n\n    // NOTE: Uncomment the code below to restore support for Redux Saga\n    // Dev Tools once it supports redux-saga version 1.x.x\n    // if (window.__SAGA_MONITOR_EXTENSION__)\n    //   reduxSagaMonitorOptions = {\n    //     sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\n    //   };\n    /* eslint-enable */\n  }\n\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n\n  // Create the store with two middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n  const middlewares = [sagaMiddleware];\n  const enhancers = [applyMiddleware(...middlewares)];\n  const runSaga = sagaMiddleware.run;\n  const injectEnhancer = createInjectorsEnhancer({\n    createReducer,\n    runSaga\n  });\n\n  const store = createStore(persistedReducer, initialState, composeEnhancers(...enhancers, injectEnhancer));\n  const persistor = persistStore(store);\n\n  // Extensions\n  store.runSaga = sagaMiddleware.run;\n  store.injectedReducers = {}; // Reducer registry\n  store.injectedSagas = {}; // Saga registry\n\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept('./createRootReducer', () => {\n      store.replaceReducer(createReducer(store.injectedReducers));\n    });\n  }\n  return { store, persistor };\n}\n","/**\n * app.js\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\n// Needed for redux-saga es6 generator support\n// Import all the third party stuff\nimport React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport history from 'utils/history';\nimport 'sanitize.css/sanitize.css';\n\n// Import root app\nimport App from 'containers/App/Loadable';\n\n// Import Language Provider\nimport LanguageProvider from 'containers/LanguageProvider';\nimport ScrollToTop from 'components/ScrollToTop';\nimport ErrorBoundary from '@components/ErrorBoundary';\n// Load the favicon and the .htaccess file\n/* eslint-disable import/no-unresolved, import/extensions */\nimport '!file-loader?name=[name].[ext]!./images/favicon.ico';\nimport 'file-loader?name=.htaccess!./.htaccess';\n/* eslint-enable import/no-unresolved, import/extensions */\n\nimport configureStore from './configureStore';\n\n// Import i18n messages\nimport { translationMessages } from './i18n';\n\n// Create redux store with history\nconst initialState = {};\nconst { store, persistor } = configureStore(initialState, history);\nconst container = document.getElementById('app');\nconst root = createRoot(container);\nconst render = (messages) => {\n  root.render(\n    <StrictMode>\n      <ErrorBoundary>\n        <Provider store={store}>\n          <PersistGate loading={null} persistor={persistor}>\n            <LanguageProvider messages={messages}>\n              <Router history={history}>\n                <ScrollToTop>\n                  <App />\n                </ScrollToTop>\n              </Router>\n            </LanguageProvider>\n          </PersistGate>\n        </Provider>\n      </ErrorBoundary>\n    </StrictMode>\n  );\n};\n\nif (module.hot) {\n  // Hot reloadable React components and translation json files\n  // modules.hot.accept does not accept dynamic dependencies,\n  // have to be constants at compile-time\n  module.hot.accept(['./i18n', 'containers/App'], () => {\n    render(translationMessages);\n  });\n}\n\n// Chunked polyfill for browsers without Intl support\nif (!window.Intl) {\n  Promise.resolve(import('intl'))\n    .then(() => Promise.all([import('intl/locale-data/jsonp/en.js')]))\n    .then(() => render(translationMessages))\n    .catch((err) => {\n      throw err;\n    });\n} else {\n  render(translationMessages);\n}\n\n// Install ServiceWorker and AppCache in the end since\n// it's not most important operation and if main code fails,\n// we do not want it installed\nif (process.env.NODE_ENV === 'production') {\n  require('@lcdp/offline-plugin/runtime').install({\n    onUpdating: () => {\n      // eslint-disable-next-line\n      console.log('SW Event: onUpdating');\n    },\n    onUpdateReady: () => {\n      // eslint-disable-next-line\n      console.log('SW Event: onUpdateReady');\n      // Tells to new SW to take control immediately\n      require('@lcdp/offline-plugin/runtime').applyUpdate();\n    },\n    onUpdated: () => {\n      // eslint-disable-next-line\n      console.log('SW Event: onUpdated');\n      // Reload the webpage to load into the new version\n      window.location.reload();\n    },\n\n    onUpdateFailed: () => {\n      // eslint-disable-next-line\n      console.log('SW Event: onUpdateFailed');\n    }\n  });\n}\n","/*\n *\n * HomeContainer reducer\n *\n */\nimport produce from 'immer';\nimport { createActions } from 'reduxsauce';\nimport get from 'lodash/get';\n\nexport const { Types: homeContainerTypes, Creators: homeContainerCreators } = createActions({\n  requestGetGithubRepos: ['repoName'],\n  successGetGithubRepos: ['data'],\n  failureGetGithubRepos: ['error'],\n  clearGithubRepos: {}\n});\nexport const initialState = { repoName: null, reposData: {}, reposError: null };\n\n/* eslint-disable default-case, no-param-reassign */\nexport const homeContainerReducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case homeContainerTypes.REQUEST_GET_GITHUB_REPOS:\n        draft.repoName = action.repoName;\n        break;\n      case homeContainerTypes.CLEAR_GITHUB_REPOS:\n        draft.repoName = null;\n        draft.reposError = null;\n        draft.reposData = {};\n        break;\n      case homeContainerTypes.SUCCESS_GET_GITHUB_REPOS:\n        draft.reposData = action.data;\n        break;\n      case homeContainerTypes.FAILURE_GET_GITHUB_REPOS:\n        draft.reposError = get(action.error, 'message', 'something_went_wrong');\n        break;\n    }\n  });\n\nexport default homeContainerReducer;\n","import find from 'lodash/find';\nimport get from 'lodash/get';\nimport routeConstants from './routeConstants';\n\n/**\n * Get details of the current route from the route config.\n * If location.pathname doesn't match any entry in the routeConstants it will return null\n * @author mac\n * @date 2020-05-07\n * @param {any} location\n * @returns {any}\n */\nexport const getCurrentRouteDetails = (location) => {\n  if (!get(location, 'pathname')) {\n    return null;\n  }\n  const route = find(\n    Object.keys(routeConstants),\n    (key) => routeConstants[key].route === location.pathname || `${routeConstants[key].route}/` === location.pathname\n  );\n  if (route) {\n    return routeConstants[route];\n  }\n  return null;\n};\nexport const mapKeysDeep = (obj, fn) => {\n  if (Array.isArray(obj)) {\n    return obj.map((val) => mapKeysDeep(val, fn));\n  }\n  if (typeof obj === 'object') {\n    return Object.keys(obj).reduce((acc, current) => {\n      const key = fn(current);\n      const val = obj[current];\n      acc[key] = val !== null && typeof val === 'object' ? mapKeysDeep(val, fn) : val;\n      return acc;\n    }, {});\n  }\n  return obj;\n};\n\nexport const isLocal = () => {\n  try {\n    const local = JSON.parse(process.env.IS_LOCAL);\n    return typeof local === 'boolean' && local;\n  } catch {\n    // continue regardless of error\n  }\n  return false;\n};\n\nexport function isUAT() {\n  return process.env.ENVIRONMENT_NAME === 'development' && process.env.NODE_ENV === 'production';\n}\n\nexport function isProd() {\n  return process.env.ENVIRONMENT_NAME === 'production' && process.env.NODE_ENV === 'production';\n}\n","import React, { lazy, Suspense } from 'react';\n\nconst loadable = (importFunc, { fallback = null } = { fallback: null }) => {\n  const LazyComponent = lazy(importFunc);\n\n  return (props) => (\n    <Suspense fallback={fallback}>\n      <LazyComponent {...props} />\n    </Suspense>\n  );\n};\n\nexport default loadable;\n","export default {\n  repos: {\n    route: '/',\n    props: {\n      maxwidth: 500,\n      padding: 20\n    },\n    exact: true\n  }\n};\n"],"names":["createBrowserHistory","basename","isProd","isUAT","process","env","BRANCH_NAME","loadable","intl","IntlGlobalProvider","children","useIntl","enTranslationMessages","require","DEFAULT_LOCALE","translationMessages","en","formatTranslationMessages","locale","messages","defaultFormattedMessages","Object","keys","reduce","formattedMessages","key","formattedMessage","assign","createActions","changeLocale","languageProviderTypes","Types","initialState","Creators","state","action","produce","draft","type","CHANGE_LOCALE","mapStateToProps","createSelector","language","languageState","connect","dispatch","props","React","ScrollToTop","prevProps","this","location","window","scrollTo","compose","withRouter","ErrorBoundary","hasError","error","errorInfo","console","id","values","formatMessage","translate","createRootReducer","injectedReducer","combineReducers","languageProviderReducer","homeContainer","homeContainerReducer","persistConfig","version","transforms","immutableTransform","storage","persistedReducer","persistReducer","createReducer","composeEnhancers","reduxSagaMonitorOptions","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","runSaga","run","injectEnhancer","createInjectorsEnhancer","store","createStore","persistor","persistStore","injectedReducers","injectedSagas","configureStore","history","container","document","getElementById","root","createRoot","render","StrictMode","Provider","loading","Router","Intl","Promise","resolve","then","all","catch","err","onUpdating","log","onUpdateReady","onUpdated","reload","onUpdateFailed","requestGetGithubRepos","successGetGithubRepos","failureGetGithubRepos","clearGithubRepos","homeContainerTypes","homeContainerCreators","repoName","reposData","reposError","REQUEST_GET_GITHUB_REPOS","CLEAR_GITHUB_REPOS","SUCCESS_GET_GITHUB_REPOS","data","FAILURE_GET_GITHUB_REPOS","get","mapKeysDeep","obj","fn","Array","isArray","map","val","acc","current","importFunc","fallback","LazyComponent","lazy","Suspense","repos","route","maxwidth","padding","exact"],"sourceRoot":""}